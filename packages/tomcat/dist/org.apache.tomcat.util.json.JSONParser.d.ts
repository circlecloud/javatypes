declare namespace org {
    namespace apache {
        namespace tomcat {
            namespace util {
                namespace json {
                    /**
                     * Basic JSON parser generated by JavaCC. It consumes the input provided through the constructor when
                     * {@code parseObject()}, {@code parseList()}, or {@code parse()} are called, and there is no way to directly
                     * reset the state.
                     */
                    // @ts-ignore
                    class JSONParser extends java.lang.Object implements org.apache.tomcat.util.json.JSONParserConstants {
                        // @ts-ignore
                        constructor(input: java.lang.String | string)
                        /**
                         * Constructor with InputStream.
                         */
                        // @ts-ignore
                        constructor(stream: java.io.InputStream)
                        /**
                         * Constructor with InputStream and supplied encoding
                         */
                        // @ts-ignore
                        constructor(stream: java.io.InputStream, encoding: java.lang.String | string)
                        /**
                         * Constructor.
                         */
                        // @ts-ignore
                        constructor(stream: java.io.Reader)
                        /**
                         * Constructor with generated Token Manager.
                         */
                        // @ts-ignore
                        constructor(tm: org.apache.tomcat.util.json.JSONParserTokenManager)
                        /**
                         * Generated Token Manager.
                         */
                        // @ts-ignore
                        public token_source: org.apache.tomcat.util.json.JSONParserTokenManager
                        /**
                         * Current token.
                         */
                        // @ts-ignore
                        public token: org.apache.tomcat.util.json.Token
                        /**
                         * Next token.
                         */
                        // @ts-ignore
                        public jj_nt: org.apache.tomcat.util.json.Token
                        /**
                         * Parses a JSON object into a Java {@code Map}.
                         */
                        // @ts-ignore
                        public parseObject(): java.util.LinkedHashMap<java.lang.String | string, java.lang.Object | any>
                        /**
                         * Parses a JSON array into a Java {@code List}.
                         */
                        // @ts-ignore
                        public parseArray(): java.util.ArrayList<java.lang.Object | any>
                        /**
                         * Parses any JSON-parseable object, returning the value.
                         */
                        // @ts-ignore
                        public parse(): any
                        // @ts-ignore
                        public setNativeNumbers(value: boolean): void
                        // @ts-ignore
                        public getNativeNumbers(): boolean
                        // @ts-ignore
                        public ensureEOF(): boolean
                        // @ts-ignore
                        public anything(): any
                        // @ts-ignore
                        public objectKey(): string
                        // @ts-ignore
                        public object(): java.util.LinkedHashMap<java.lang.String | string, java.lang.Object | any>
                        // @ts-ignore
                        public list(): java.util.ArrayList<java.lang.Object | any>
                        // @ts-ignore
                        public value(): any
                        // @ts-ignore
                        public nullValue(): any
                        // @ts-ignore
                        public booleanValue(): java.lang.Boolean
                        // @ts-ignore
                        public number(): java.lang.Number
                        // @ts-ignore
                        public string(): string
                        // @ts-ignore
                        public doubleQuoteString(): string
                        // @ts-ignore
                        public singleQuoteString(): string
                        // @ts-ignore
                        public symbol(): string
                        /**
                         * Reinitialise.
                         */
                        // @ts-ignore
                        public ReInit(stream: java.io.InputStream): void
                        /**
                         * Reinitialise.
                         */
                        // @ts-ignore
                        public ReInit(stream: java.io.InputStream, encoding: java.lang.String | string): void
                        /**
                         * Reinitialise.
                         */
                        // @ts-ignore
                        public ReInit(stream: java.io.Reader): void
                        /**
                         * Reinitialise.
                         */
                        // @ts-ignore
                        public ReInit(tm: org.apache.tomcat.util.json.JSONParserTokenManager): void
                        /**
                         * Get the next Token.
                         */
                        // @ts-ignore
                        public getNextToken(): org.apache.tomcat.util.json.Token
                        /**
                         * Get the specific Token.
                         */
                        // @ts-ignore
                        public getToken(index: number /*int*/): org.apache.tomcat.util.json.Token
                        /**
                         * Generate ParseException.
                         */
                        // @ts-ignore
                        public generateParseException(): org.apache.tomcat.util.json.ParseException
                        /**
                         * Trace enabled.
                         */
                        // @ts-ignore
                        public trace_enabled(): boolean
                        /**
                         * Enable tracing.
                         */
                        // @ts-ignore
                        public enable_tracing(): void
                        /**
                         * Disable tracing.
                         */
                        // @ts-ignore
                        public disable_tracing(): void
                    }
                }
            }
        }
    }
}
